{"version":3,"sources":["components/Content/Users/users.module.css","components/Dialogs/Dialogs.module.css","components/Sidebar/Sidebar.module.css","components/Content/ProfileInfo/ProfileInfo.module.css","components/Content/myPosts/MyPosts.module.css","components/Content/Content.module.css","components/Content/myPosts/Post/Post.module.css","components/Footer/Footer.module.css","assets/images/my-ava.png","assets/images/def-ava.png","logo.svg","components/Header/Header.module.css","components/Footer/Footer.js","components/Content/ProfileInfo/ProfileInfo.jsx","redux/profileReducer.js","components/Content/myPosts/Post/Post.jsx","components/Content/myPosts/Post/PostContainer.jsx","components/Content/myPosts/MyPosts.jsx","components/Content/myPosts/MyPostContainer.jsx","components/Content/Content.jsx","components/Header/Header.js","components/Sidebar/Sidebar.js","redux/messagesReducer.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Content/Users/Users.jsx","redux/usersReducer.js","components/Content/Users/UsersContainer.jsx","App.js","redux/redux-store.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","classes","footer","ProfileInfo","avaDesc","ava","src","myAva","alt","desc","initialState","posts","id","message","likeCounts","newPostText","profileReducer","state","action","type","newPost","newText","map","p","postId","newlikeCounts","Post","props","post","like","onClick","likeIncrement","PostsContainer","connect","profilePage","dispatch","likeIncrementAC","MyPosts","postElements","postElem","key","newPostElement","React","createRef","postsWrapper","inputWrapper","placeholder","onChange","text","current","value","updateNewPostText","ref","addPost","postList","MyPostsContainer","updateNewPostTextActionCreator","Content","content","myPost","Header","Sidebar","nav","item","href","dialogsData","name","messagesData","newMessText","messagesReducer","DialogItem","path","s","active","to","Message","messagesItem","Dialogs","messagesPage","dialogsElements","dialogElement","messagesElements","messageElement","dialogs","dialogItmes","h3title","messages","showMes","updateNewMessage","addMessage","DialogsContainer","updateNewMessageTextActionCreator","Users","axios","then","response","setUsers","data","items","styles","list","this","users","u","left","photos","small","userPhoto","followed","unfollow","follow","right","userName","userStatus","userCountry","userCity","Component","usersReducer","userId","usersPage","followAC","unfollowAC","setUsersAC","App","render","UsersContainer","reducers","combineReducers","store","createStore","window","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70fe6dbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"users_ava__1Ce0_\",\"list\":\"users_list__1_T-C\",\"item\":\"users_item__1_m1M\",\"left\":\"users_left__31utI\",\"right\":\"users_right__15Jbi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__3xYFt\",\"dialogs\":\"Dialogs_dialogs__1ldWw\",\"dialogItmes\":\"Dialogs_dialogItmes__2wJne\",\"item\":\"Dialogs_item__2S0YD\",\"active\":\"Dialogs_active__2L36t\",\"messagesItem\":\"Dialogs_messagesItem__6zCzC\",\"messages\":\"Dialogs_messages__l3TAG\",\"h3title\":\"Dialogs_h3title__TKXRv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Sidebar_nav__332if\",\"item\":\"Sidebar_item__1W3V_\",\"last\":\"Sidebar_last__-3VlP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaDesc\":\"ProfileInfo_avaDesc__2LCNW\",\"ava\":\"ProfileInfo_ava___uTDi\",\"desc\":\"ProfileInfo_desc__1F0-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postList\":\"MyPosts_postList__n1uGL\",\"inputWrapper\":\"MyPosts_inputWrapper__2KEeJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__1Xl23\",\"ava\":\"Content_ava__1EzJZ\",\"avaDesc\":\"Content_avaDesc__3obY3\",\"desc\":\"Content_desc__1FEMl\",\"myPost\":\"Content_myPost__3qVDH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1iWm9\",\"postList\":\"Post_postList__wH8F3\",\"like\":\"Post_like__u8w68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2Pwx8\"};","module.exports = __webpack_public_path__ + \"static/media/my-ava.614321fe.png\";","module.exports = __webpack_public_path__ + \"static/media/def-ava.e11b93a0.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2E6cA\"};","import React from \"react\";\r\nimport classes from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className={classes.footer}>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","import classes from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport myAva from \"../../../assets/images/my-ava.png\"\r\n\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div className={classes.avaDesc}>\r\n            <div className={classes.ava}>\r\n                <img src={myAva} alt=\"\"/>\r\n            </div>\r\n            <div className={classes.desc}>\r\n                <p>Due to existing experience in developing and releasing stable sites and online stores for the business, I would like to continue improving my skills in the field of front-end development. My goal is to take part in projects, where I can apply all my knowledge and experience into developing quality products and participating in defining project objectives and their implementation.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst ADD_LIKE_TO_POST = \"ADD-LIKE-TO-POST\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit!\", likeCounts: 2},\r\n        {id: 2, message: \"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\", likeCounts: 5},\r\n        {id: 3, message: \"Version 10.0.17134.765\", likeCounts: 0}\r\n    ],\r\n    newPostText: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likeCounts: 0\r\n            };\r\n            return  {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        case ADD_LIKE_TO_POST: {\r\n            return  {\r\n                ...state,\r\n                posts: state.posts.map( p => {\r\n                    if (p.id === action.postId) {\r\n                        let newlikeCounts = p.likeCounts + 1;\r\n                        return  {...p, likeCounts: newlikeCounts}\r\n                    }\r\n                    return p;\r\n                })\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n\r\n};\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n};\r\nexport const updateNewPostTextActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text\r\n    }\r\n};\r\n\r\nexport const likeIncrementAC = (postId) => ({type: ADD_LIKE_TO_POST, postId});\r\n\r\n\r\nexport default profileReducer;\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n\r\n    let onLikeIncrement = () => {\r\n        let postId = props.id;\r\n        props.likeIncrement(postId);\r\n    };\r\n\r\n        return (\r\n            <li className={classes.post}>\r\n                <div>\r\n               <p>{props.message}</p>\r\n                </div>\r\n                <div className={classes.like}><button onClick={onLikeIncrement}>Like!</button><span>{props.likeCounts}</span></div>\r\n            </li>\r\n        )\r\n};\r\nexport default Post;\r\n\r\n","import React from \"react\";\r\nimport Post from \"./Post\";\r\nimport {connect} from \"react-redux\";\r\nimport {likeIncrementAC} from \"../../../../redux/profileReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        likeIncrement: (postId) => {\r\n            dispatch(likeIncrementAC(postId))\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps) (Post);\r\n\r\nexport default PostsContainer;\r\n\r\n","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport PostsContainer from \"./Post/PostContainer\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postElements = props.posts.map (\r\n      postElem =>   <PostsContainer message={postElem.message} id={postElem.id} key={postElem.id} likeCounts={postElem.likeCounts}/>\r\n    );\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    };\r\n    return (\r\n        <div className={classes.postsWrapper}>\r\n            <div className={classes.inputWrapper}>\r\n                <textarea placeholder={\"anything new?\"} onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>\r\n                <button onClick={onAddPost}>Add post</button>\r\n            </div>\r\n            <ul className={classes.postList}>\r\n                {postElements}\r\n            </ul>\r\n        </div>\r\n        )\r\n\r\n};\r\nexport default MyPosts;\r\n\r\n","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from \"react\";\r\nimport classes from './Content.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myPosts/MyPostContainer\";\r\n\r\nconst Content = (props) => {\r\n    return (\r\n            <div className={classes.content}>\r\n               <ProfileInfo/>\r\n                <div className={classes.myPost}>\r\n                    <MyPostsContainer  />\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default Content;\r\n","import React from \"react\";\r\nimport './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src=\"https://www.freelogodesign.org/Content/img/logo-ex-2.png\" alt=\"logo\"/>\r\n        </header>\r\n    );\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport classes from './Sidebar.module.css';\r\n\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <a href=\"/profile\">Profile</a>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a href=\"/dialog\">Messages</a>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a href=\"/users\">Users</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\n\r\nexport default Sidebar;\r\n","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\n\r\nlet initialState = {\r\n\r\n        dialogsData: [\r\n            {id: 1, name: \"User-bot\"},\r\n            {id: 2, name: \"Petya\"},\r\n            {id: 3, name: \"Kotovskiy\"},\r\n            {id: 4, name: \"Anka\"}\r\n        ],\r\n        messagesData: [\r\n            {id: 1, message: \"Hi\"},\r\n            {id: 2, message: \"Microsoft Corporation\"},\r\n            {id: 3, message: \"Version 10.0.17134.765\"}\r\n        ],\r\n        newMessText: 'type your message here'\r\n    \r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {\r\n                    id: 5,\r\n                    message: state.newMessText,\r\n                }],\r\n                dialogsData: [...state.dialogsData],\r\n                newMessText: ''\r\n            };\r\n        }\r\n\r\n        case UPDATE_NEW_MESSAGE_TEXT: {\r\n            return  {\r\n                ...state,\r\n                newMessText: action.newText\r\n            };\r\n        }\r\n        default: return state;\r\n    }\r\n\r\n};\r\n\r\nexport const addMessageActionCreator = () => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n    }\r\n};\r\nexport const updateNewMessageTextActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_TEXT,\r\n        newText: text\r\n    }\r\n};\r\nexport default messagesReducer;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage;\r\n    let dialogsElements = state.dialogsData.map (\r\n        dialogElement =>  <DialogItem name={dialogElement.name} id={dialogElement.id}/>);\r\n\r\n    let messagesElements = state.messagesData.map (\r\n        messageElement => <Message message={messageElement.message}/> );\r\n    let newMessText = React.createRef();\r\n\r\n    let addMessage = () => {\r\n\r\n        props.addMessage();\r\n    };\r\n\r\n    let onMessChange = () => {\r\n        let showMes = newMessText.current.value;\r\n        props.updateNewMessage(showMes);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItmes}>\r\n                <h3 className={s.h3title}>Friends</h3>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <textarea ref={newMessText}\r\n                          value={state.newMessText}\r\n                          onChange={onMessChange}\r\n                />\r\n                <button onClick={addMessage}>send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialog/\" + props.id;\r\n    return (\r\n        <div className={s.item + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n        )\r\n\r\n}\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.messagesItem}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from \"../../redux/messagesReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessage: (text) => {\r\n            dispatch(updateNewMessageTextActionCreator(text));\r\n        },\r\n        addMessage: () => {\r\n            dispatch(addMessageActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (Dialogs);\r\n\r\n\r\n\r\nexport default DialogsContainer;\r\n","import React from 'react';\r\nimport styles from './users.module.css';\r\nimport * as axios from \"axios\";\r\nimport userPhoto from '../../../assets/images/def-ava.png';\r\n\r\n\r\nclass Users extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get(\"https://social-network.samuraijs.com/api/1.0/users\").then(response => {\r\n            this.props.setUsers(response.data.items);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <div className={styles.list}>\r\n            {\r\n                this.props.users.map(u => <div className={styles.item} key={u.id}>\r\n                    <div className={styles.left}>\r\n                        <div className={styles.ava}><img src={u.photos.small != null ? u.photos.small : userPhoto} alt=\"\"/></div>\r\n                        <div>\r\n                            {u.followed\r\n                                ? <button onClick={ () => {this.props.unfollow(u.id)} }>Unfollow</button>\r\n                                : <button onClick={ () => {this.props.follow(u.id)} }>Follow</button> }\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.right}>\r\n                        <div className=\"top\">\r\n                            <p className={styles.userName}>{u.name}</p>\r\n                            <p className={styles.userStatus}>id: {u.id}</p>\r\n                        </div>\r\n                        <div className=\"bottom\">\r\n                            <p className={styles.userCountry}>{\"u.location.country\"}</p>\r\n                            <p className={styles.userCity}>{\"u.location.city\"}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport default Users;\r\n","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\n\r\nlet initialState = {\r\n    users: [\r\n   ],\r\n    newPostText: 'samurai-way'\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return  {\r\n                ...state,\r\n                users: state.users.map( u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return  {\r\n                ...state,\r\n                users: state.users.map( u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS:  {\r\n             return {...state, users: [...state.users, ...action.users]}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const followAC = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users});\r\nexport default usersReducer;\r\n","import React from 'react';\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {followAC, setUsersAC, unfollowAC} from \"../../../redux/usersReducer\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Users);\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Footer from './components/Footer/Footer';\nimport Content from './components/Content/Content.jsx';\nimport Header from \"./components/Header/Header\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {Route} from \"react-router-dom\";\nimport UsersContainer from \"./components/Content/Users/UsersContainer\";\n\n\nconst App = (props) => {\n    return (\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Sidebar/>\n                <div className=\"app-wrapper-content\">\n                  <Route path=\"/dialog\"\n                         render={ () => <DialogsContainer  />} />\n                  <Route path=\"/profile\"\n                         render={ () => <Content  />}  />\n                    <Route path=\"/users\"\n                           render={ () => <UsersContainer /> } />\n                </div>\n                <Footer/>\n            </div>\n    )\n};\n\n\nexport default App;\n","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nlet reducers = combineReducers({\r\n\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    usersPage: usersReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/redux-store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker'\nimport {Provider} from \"react-redux\";\n\n//addPost(\"SamurayJs\");\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n            <App />\n            </Provider>\n        </BrowserRouter>,   document.getElementById('root')\n    );\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}